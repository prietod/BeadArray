#!/usr/bin/env bash

error() {
  local code_name=$1; shift
  local chip_barcode=$1; shift
  local msg=$1; shift

  make_dir ${FAILED_DIR}/${code_name}

  echo "Error: $msg" | tee ${FAILED_DIR}/${code_name}/${chip_barcode}.txt 1>&2
  exit 1
}

create_dir() {
  local dir="$1"
  [[ -d ${dir} ]] || mkdir -p ${dir}
}

usage() {
  echo "Usage: $( basename $0 ) <code> [chip_barcode] [chip_barcode..]" 1>&2
  exit 1
}

filter_excluded() {
  grep -v '/level2' | grep -v '7911755025' | grep -v '\.zip$'
}

check_have_group() {
  local group=$1
  local code_name=$2
  local chip_barcode=$3

  local id_output=$( id )
  if ! echo ${id_output} | grep -q "\<${group}\>"; then
    error ${code_name} ${chip_barcode} \
      "Exiting. Node dropped '${group}' group ownership in session, data inaccessible. id-output: ${id_output}"
  fi
}

copy_data() {
  local chip_barcode=$1

  create_dir ${DEST_DATA_DIR}/${chip_barcode}

  for f in $( find ${SOURCE_DATA_DIR} -type f -name "${chip_barcode}*" | filter_excluded ); do
    [[ -f ${DEST_DATA_DIR}/${chip_barcode}/$( basename ${f} ) ]] || cp -v ${f} ${DEST_DATA_DIR}/${chip_barcode}
  done
}

mark_job_complete() {
  local code_name=$1
  local chip_barcode=$2

  [[ -d ${COMPLETE_DIR}/${code_name} ]] || mkdir -p ${COMPLETE_DIR}/${code_name}

  date +%FT%T > ${COMPLETE_DIR}/${code_name}/${chip_barcode}.txt
}

clear_job_complete() {
  local code_name=$1
  local chip_barcode=$2

  if [[ -f ${COMPLETE_DIR}/${code_name}/${chip_barcode}.txt ]]; then
    rm ${COMPLETE_DIR}/${code_name}/${chip_barcode}.txt
  fi
}

main() {
  local code=${1}; shift
  local chip_barcodes="${@:-3998755068}" # default for testing

  local code_name=$( basename $code .R )

  module load apps/R/${R_VERSION:-3.2.3}

  for chip_barcode in ${chip_barcodes}; do

    check_have_group hiifoo ${code_name} ${chip_barcode}

    clear_job_complete ${code_name} ${chip_barcode}

    local raw_qc_dir=${WORK_DIR}/${code_name}/${chip_barcode}/raw/qc
    mkdir -p ${raw_qc_dir}

    copy_data ${chip_barcode}

    R --slave --quiet --no-restore --no-save --args ${DEST_DATA_DIR}/${chip_barcode} ${raw_qc_dir} < ${code}

    [[ $? == 0 ]] && mark_job_complete ${code_name} ${chip_barcode}
  done
}

BASE="$(readlink -f $(readlink -f $(dirname "${BASH_SOURCE}")/..))"

SOURCE_DATA_DIR="${SOURCE_DATA_DIR:-/hiidata/teddy/data/jinfiniti/gene_expression}"

MAP_INFO="${MAP_INFO:-$SOURCE_DATA_DIR/map_info.txt}"

DEST_DATA_DIR="${DEST_DATA_DIR:-$BASE/tmp/data}"

WORK_DIR="${WORK_DIR:-$BASE/tmp/work}"

COMPLETE_DIR="${COMPLETE_DIR:-$BASE/tmp/complete}"

FAILED_DIR="${FAILED_DIR:-$BASE/tmp/failed}"

cd $BASE

[[ $# < 1 ]] && usage

main "$@"

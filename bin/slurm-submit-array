#!/usr/bin/env bash
#
# slurm-submit-array <program> [args...]
#
# Reads a list of keys from STDIN, creates an slurm-array map and
# invokes each slurm array task as:
#
#   <program> KEY [args...]
#
#-----------------------------------------------------------------------

sleep 2 # makes things better - trust me :-)

BASE="$(readlink -f $(readlink -f $(dirname "${BASH_SOURCE}")/..))"

LOG_BASE=${LOG_BASE:-$BASE/tmp/log}

SUBMIT_CPUS_PER_TASK="${SUBMIT_CPUS_PER_TASK:-2}"
SUBMIT_MEM_MB="${SUBMIT_MEM_MB:-16000}"
SUBMIT_TIME="${SUBMIT_TIME:-16:00:00}"
SUBMIT_PARTITION="${SUBMIT_PARITION:-hii02}"
SUBMIT_RANDOM_SECONDS=${SUBMIT_RANDOM_SECONDS:-60}

datestamp=$( date +%s )

program=$1; shift
program_short=$( basename ${program} )

log_dir=$LOG_BASE/${program_short}

mkdir -p $LOG_BASE/job

( mkdir -p $log_dir && cd $log_dir && mkdir $datestamp && ln -nsf $datestamp current )

mkdir -p $log_dir/$datestamp/{task,key}

array_map=$BASE/tmp/var/array-map-${program_short}-$datestamp.txt

[[ -d "$( dirname $array_map )" ]] || mkdir -p "$( dirname $array_map )"

> ${array_map}

while read key; do
  echo "$(( ++task_id )):${key}" >> ${array_map}
  ln -s ${log_dir}/${datestamp}/task/${task_id}.log $log_dir/${datestamp}/key/${key}.log
done

array_count=$( wc -l ${array_map} | awk '{print $1}' )

sleep_command="$BASE/bin/util/random-sleep $SUBMIT_RANDOM_SECONDS"

if ! [[ -f "${program}" ]]; then
  echo "Error: program '${program}' does not exist. Exiting." 1>&2
  exit 1
fi

if ! [[ -x "${program}" ]]; then
  echo "Error: program '${program}' is not executable. Exiting." 1>&2
  exit 1
fi

job_id=$(
  sbatch \
    --ntasks=1 \
    --job-name="${program_short}" \
    --output=${log_dir}/${datestamp}/task/%a.log \
    --array=1-${array_count} \
    --mem=$SUBMIT_MEM_MB \
    --cpus-per-task=$SUBMIT_CPUS_PER_TASK \
    --time=$SUBMIT_TIME \
    --partition=$SUBMIT_PARTITION \
    --wrap="${sleep_command}; ${program} \$( $BASE/bin/util/lookup-array-map ${array_map} ) $*" \
  | awk '{print $NF}'
)

ln -s ${log_dir}/${datestamp} $LOG_BASE/job/${job_id}


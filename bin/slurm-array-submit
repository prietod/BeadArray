#!/usr/bin/env bash

BASE="$(readlink -f $(readlink -f $(dirname "${BASH_SOURCE}")/..))"

DATESTAMP=$( date +%FT%T )

SUBMIT_CPUS_PER_TASK="${SUBMIT_CPUS_PER_TASK:-2}"
SUBMIT_MEM_MB="${SUBMIT_MEM_MB:-16000}"
SUBMIT_TIME="${SUBMIT_TIME:-16:00:00}"
SUBMIT_PARTITION="${SUBMIT_PARITION:-hii02}"
SUBMIT_RANDOM_SECONDS=${SUBMIT_RANDOWM_SECONDS:-180}

program=$1; shift
program_short=$( basename ${program} )

log_dir=$BASE/tmp/log/${program_short}

( mkdir -p $log_dir && cd $log_dir && mkdir $DATESTAMP && ln -nsf $DATESTAMP current )

array_map=$BASE/tmp/var/array-map-${program_short}-$DATESTAMP.txt

[[ -d "$( dirname $array_map )" ]] || mkdir -p "$( dirname $array_map )"

> ${array_map}

while read f; do
  echo "$(( ++n )):$f" >> ${array_map}
done

array_count=$( wc -l ${array_map} | awk '{print $1}' )

sleep_command="$BASE/bin/util/random-sleep $SUBMIT_RANDOM_SECONDS"

if ! [[ -f "${program}" ]]; then
  echo "Error: program '${program}' does not exist. Exiting." 1>&2
  exit 1
fi

if ! [[ -x "${program}" ]]; then
  echo "Error: program '${program}' is not executable. Exiting." 1>&2
  exit 1
fi

set -x

sbatch \
  --ntasks=1 \
  --job-name="${program_short}" \
  --output=${log_dir}/${DATESTAMP}/%a.log \
  --array=1-${array_count} \
  --mem=$SUBMIT_MEM_MB \
  --cpus-per-task=$SUBMIT_CPUS_PER_TASK \
  --time=$SUBMIT_TIME \
  --partition=$SUBMIT_PARTITION \
  --wrap="${sleep_command}; $BASE/bin/run-ng \$( $BASE/bin/util/lookup-array-map ${array_map} ) $*"


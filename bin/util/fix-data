#!/usr/bin/env python

from pprint import pprint
import fileinput
import sys

data = {}
header = []
last_len = 'start'

for filename in fileinput.input():

    with open(filename.rstrip('\n')) as f:
        line = f.readline()
        header.extend(line.rstrip('\n').split('\t')[2:])

        for line in f.readlines():
            columns = line.rstrip('\n').split('\t')
            primary_key = columns[0]
            secondary_key = columns[1]
            values = columns[2:]

            if primary_key not in data:
                data[primary_key] = { 'secondary_key': secondary_key, 'values': [] }

            data[primary_key]['values'].extend(values)


header.insert(0, 'Probe_ID')
header.insert(1, 'Entrez_ID')
print('\t'.join(header))

for primary_key in sorted(data.iterkeys()):
    line = [ primary_key ]
    line.append(data[primary_key]['secondary_key'])
    line.extend(data[primary_key]['values'])
    line_len = len(line)

    if last_len != 'start' and line_len != last_len:
      sys.stderr.write("Line length does not match:")
      sys.stderr.write('\t'.join(line))
      sys.exit(1)
    else:
      last_len = line_len

    print('\t'.join(line))


#
#line = [ str(headers[file][column]) for column in range(num_cols) for file in range(4) ]
#line.insert(0, 'Probe_ID')
#print('\t'.join(line))
#
#
## print re-oriented values
#
#    try:
#        number_cols = len(data[k][file])
#        line = [ str(data[k][file][column]) for column in range(num_cols) for file in range(4) ]
#        line.insert(0, k)
#        print('\t'.join(line))
#    except:
#        sys.stderr.write('Error: Key: ' + k )
#        sys.exit(1)

#!/usr/bin/env python
#----------------------------------------------------------------------------------------------
#
# Usage: ./bin/util/generate-phenotype-details <cols_added_file> <map_info_file>
#
# - Cycle over all rows in cols_added_file
# - Merge in any donor information and transform spaces to hyphens ("Donor 1" == (Donor-1")
# - Remove date columns in header and rows
# - Print revised header and rows with merged donor info
#
#----------------------------------------------------------------------------------------------

import sys

header = []
rows = []

cols_added_file = sys.argv[1]
map_info_file = sys.argv[2]

excluded_fields = [ 'draw_dte', 'Date_Received_Sample', 'Date_of_Evaluation' ]

map_info_data = {}

with open(map_info_file) as f:
    map_info_header = f.readline()
    for line in f.readlines():
        map_info_columns = line.rstrip('\n').split('\t')
        donor_number = map_info_columns[3]
        array_id = map_info_columns[6] + '_' + map_info_columns[7]
        if donor_number != '' and donor_number != 'NA':
            map_info_data[array_id] = donor_number.replace(' ', '-') # remove spaces as R does not like them in read.table()

with open(cols_added_file) as f:

    # header
    line = f.readline()
    columns = line.rstrip('\n').split('\t')
    header = [ col for col in columns if col not in excluded_fields ]
    header.insert(0,'Array_ID')

    # rows
    for line in f.readlines():
        (subject_id,
        vial_barcode_number,
        test_name,
        donor_number,
        box,
        row,
        chip_barcode,
        array,
        draw_dte,
        sample_status,
        date_received_sample,
        date_of_evaluation,
        comments,
        casestatus,
        sex,
        age_in_months ) = line.rstrip('\n').split('\t')

        array_id = chip_barcode + '_' + array

        if map_info_data.get(array_id):
            donor_number = map_info_data[array_id]

        columns = [ array_id,
                    subject_id, vial_barcode_number, test_name, donor_number,
                    box, row, chip_barcode, array, sample_status, comments,
                    casestatus, sex, age_in_months ]

        columns = [col if col != '' else 'NA' for col in columns]

        rows.append(columns)

print('\t'.join(header))

for row in rows:
    print('\t'.join(row))

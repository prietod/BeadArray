#!/usr/bin/env bash

BASE="$(readlink -f $(readlink -f $(dirname "${BASH_SOURCE}")/../..))"
ME="$(basename ${BASH_SOURCE})"

source ${BASE}/lib/env.sh
source ${BASE}/lib/util.sh

error() { echo "$ME - Error: "$@"" 1>&2; }

error_exit() { error "$@"; exit 1; }

usage() {
  echo "Usage: $ME <map_info> [all|all-array|donor-array|non-donor-array|donor-array-with-donor]" 1>&2
  exit 1
}

strip_header() {
  sed -n '2,$p'
}

fields="
subject_id
vial_barcode_number
test_name
donor_number
box
row
chip_barcode
array
draw_dte
sample_status
date_received_sample
date_of_evaluation
comments
"

filter_chips() {
  egrep -v "9250939039|3998787097|3998787101"
}

declare -A field_map

for f in $fields; do
  field_map[$f]=$((++n))
done

[[ $# != 1 && $# != 2 ]] && usage

mode=${1:-all}

map_info=${2:-"${JINFINITI_DATA_DIR}/map_info.txt"}

[[ -f ${map_info} ]] || error_exit "map_info file '${map_info}' does not exist."

case ${mode} in
  all)
    strip_header < ${map_info} | awk -F'\t' "{ print \$${field_map[chip_barcode]} }"
  ;;

  all-array)
    strip_header < ${map_info} \
      | awk -F'\t' "{ print \$${field_map[chip_barcode]}\"_\"\$${field_map[array]} }"
  ;;

  donor-array)
    strip_header < ${map_info} \
      | awk -F'\t' "{ if (\$${field_map[donor_number]} != \"\" && \$${field_map[donor_number]} != \"NA\") \
                        print \$${field_map[chip_barcode]}\"_\"\$${field_map[array]} }"
  ;;

  donor-array-with-donor)
    strip_header < ${map_info} \
      | awk -F'\t' "{ if (\$${field_map[donor_number]} != \"\" && \$${field_map[donor_number]} != \"NA\") \
                        print \$${field_map[chip_barcode]}\"_\"\$${field_map[array]} \" \" \$${field_map[donor_number]} }"
  ;;

  non-donor-array)
    strip_header < ${map_info} \
      | awk -F'\t' "{ if (\$${field_map[donor_number]} == \"\" || \$${field_map[donor_number]} == \"NA\") \
                        print \$${field_map[chip_barcode]}\"_\"\$${field_map[array]} }"
  ;;

  *) echo "mode: '${mode}' not recognized. Exiting" 1>&2; exit 1;
  ;;

esac | filter_chips | sort -u


